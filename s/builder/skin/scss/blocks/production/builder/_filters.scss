.builder li {
    // define filters
    $components: (
        ('length' 'Cable Length'),
        ('cable', 'Cable Type'),
        ('input' 'Input Plug'),
        ('output' 'Output Plug'),
        ('other' 'Other Options'),
    );

    @for $i from 1 to length($components) + 1 {
        $component: nth($components, $i);
        $name: nth($component, 1);
        $desc: quote($i + '. '+ nth($component, 2));

        &.#{$name} .filters:before {
            content: $desc;
        }
    }
}

.filters {
    @include display-flex(flex);
    @include flex-direction(row);
    @include flex-wrap(nowrap);
    @include align-items(center);
    background-color: $teal;
    font-size: 11px;
    height: 70px;
    letter-spacing: 1px;
    position: relative;
    text-transform: uppercase;

    &:before {
        align-self: center;
        color: #fff;
        cursor: default;
        display: block;
        font-size: 14px;
        font-weight: bolder;
        letter-spacing: 1px;
        margin-left: 20px;
        text-transform: uppercase;
        width: 150px;
    }

    // hide radio/checkbox inputs
    input[name="active"] {
        display: none;
    }

    .filter-clear {
        background-color: darken($teal, 20%);
        bottom: -15px;
        border: none;
        color: $white;
        cursor: pointer;
        display: none;
        font-size: 9px;
        height: 15px;
        letter-spacing: 1px;
        line-height: 15px;
        padding-left: 15px;
        position: absolute;
        right: 0;
        text-align: center;
        text-transform: uppercase;
        width: 115px;
        z-index: 35;

        &:before {
            background: url($media-folder + "misc/x.white.png") no-repeat scroll center center / 100% 100% transparent;
            content: "";
            display: block;
            height: 8px;
            left: 9px;
            position: absolute;
            top: 3.5px;
            width: 8px;
        }

        &[data-filter-active="true"] {
            display: block;
        }
    }

    .filter-container {
        .isMobile & { display: none; }

        @include align-self(center);
        height: 50%;
        margin-right: 1%;
        max-height: 40px;
        max-width: 150px;
        min-width: 85px;
        position: relative;
        width: 23%;

        &:after {
            border-color: darken($teal, 10%) transparent;
            border-style: solid solid none;
            border-width: 7px 4px medium;
            content: "";
            display: block;
            height: 0;
            position: absolute;
            right: 1em;
            top: 12.5px;
            width: 0;
            z-index: 3;

            @include transition(all 0.4s ease);
            @include transform(rotate(0));
        }

        &.manufacturer {
            max-width: 185px;
            width: 30%;

            .filter {
                max-width: 185px;
            }
        }

        &[data-filter-open="open"] {
            input[name="active"] + h2:after {
                display: none;
            }
            &:after {
                @include transform(rotate(-180deg));
            }

            .filter-option {
                color: lighten($white, 10%);
                background-color: darken($teal, 10%);
            }

            .filter {
                @include transition(z-index 0s step-end);
                z-index: 40;
            }

            input:checked + label {
                color: $teal;
            }

            div.filter-option {
                @include transform(translateY(0));
                opacity: 1;
                visibility: visible;

                @for $i from 1 through 7 {
                    &:nth-child(#{$i}) {
                        @include transition(all 0.1s #{0.025*$i}s ease-out);
                    }
                }
            }
        }

        $categories: 'capacitance' 'flexibility' 'color' 'manufacturer';
        @each $category in $categories {
            &[data-filter-open="closed"][data-filter-type="#{$category}"] input[name="active"]:checked + h2:before {
                content: "Filter by: #{$category}";
            }
        }

        &[data-filter-type="color"] {
            .filter-option {
                label {
                    &:before, &:after {
                        content: '';
                        position: absolute;
                        width: 10px;
                        height: 10px;
                    }
                    &:before {
                        left: 2em;
                    }
                    &:after {
                        right: 2em;
                        border-radius: 50%;
                        border: 1px solid transparent;
                    }
                }
                $list: 'red' 'orange' 'yellow' 'green' 'black' 'white' 'green' 'blue' 'gray';
                @each $color in $list {
                    input[value="#{$color}"] + label:after {
                        background-color: #{$color};

                        @if $color == 'black' {
                            border-color: #fff;
                        }
                    }
                }
                @for $i from 1 through 7 {
                    &:nth-child(#{$i}) {
                        @include transition(all 0.1s #{0.025*(7-$i)}s ease-out);
                    }
                }
            }
        }

        &.capacitance, &.flexibility {
            .filter-option {
                @for $i from 1 through 3 {
                    &:nth-child(#{$i}) {
                        @include transition(all 0.1s #{0.05*(3-$i)}s ease-out);
                    }
                }
            }
        }
    }

    h2 {
        @include transition(all 0.1s ease-in);
        @include display-flex(flex);
        @include align-items(center);
        @include justify-content(center);
        background-color: $white;
        border-bottom: solid 3px darken($teal, 20%);
        color: $teal;
        cursor: pointer;
        height: 100%;
        letter-spacing: 1px;
        font-weight: bold;
        position: relative;
        max-width: 150px;
        z-index: 2;

        &:before {
            content: "Filter by:";
            color: $white;
            display: block;
            left: 0;
            position: absolute;
            text-transform: uppercase;
            top: -11px;
            @include transition(all 0.2s ease-out);
        }
    }

    input[name="active"] {
        [data-filter-open="open"] h2:after, [data-filter-open="open"] h2:before {
            display: none;
        }

        &:checked + h2:after {
            @include align-items(center);
            @include display-flex(flex);
            @include justify-content(center);
            background-color: $white;
            background-position: 10% center;
            background-repeat: no-repeat;
            content: "";
            height: 100%;
            left: 0;
            position: absolute;
            top: 0;
            width: 100%;
        }

        $list: 'high' 'med' 'low' 'switchcraft' 'neutrik' 'g#{"&"}h';
        @each $item in $list {
            &[value="#{$item}"]:checked + h2:after {
                content: "#{$item}";
            }
        }


        $colors: 'red' 'orange' 'yellow' 'green' 'blue' 'black' 'white' 'multiple';
        @each $colors in $colors {
            &[value="#{$colors}"]:checked + h2:after {
                background-image: url($media-folder + 'misc/filters/#{$colors}.png');
                content: "#{$colors}";
            }
        }

        h2:before {
            opacity: 1;
            top: -11px;
        }
    }

    .filter {
        @include transition(all 0.2s ease-in, z-index 0.2s step-end);
        border: solid 0px transparent;
        max-width: 150px;
        position: absolute;
        width: 100%;
        z-index: 1;

        .filter-option {
            @include display-flex(flex);
            @include align-items(center);
            @include justify-content(center);
            @include transform(translateY(-40%));
            background-color: $teal;
            color: $white;
            font-weight: bold;
            height: 35px;
            letter-spacing: 1px;
            margin: 0;
            opacity: 0;
            position: relative;
            visibility: hidden;
            width: 100%;

            input {
                display: none;
            }

            input:checked + label {
                background-color: white;
                border: 5px solid darken($teal, 30%);
                opacity: 1;
            }

            label {
                @include display-flex(flex);
                @include align-items(center);
                @include justify-content(center);
                cursor: pointer;
                height: 100%;
                opacity: 0.65;
                text-align: center;
                width: 100%;

                &:hover {
                    opacity: 0.9;
                }
            }
        }
    }

    li.length & > div {
        position: absolute;
        right: 5%;
        top: 20%;
        width: 90%;
        height: 60%;

        img {
            position: absolute;
            right: 0;

            &.measurement {
                top: 20px;
                width: 0%;
                max-width: 440px;
                max-height: none;
                z-index: 3;
                border: solid 0 black;
                @include transition(all 0.3s ease-out);
            }

            &.notice {
                top: 0;
                max-height: 100%;
                max-width: 100%;
                cursor: pointer;
            }
        }

        &.showNotice .measurement {
            border-width: 3px;
            width: 100%;
        }
    }
}
