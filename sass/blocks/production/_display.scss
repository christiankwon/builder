@import 'display/pointers';
.display {
    @include display-flex(flex);
    @include align-items(center);
    @include justify-content(center);
    @include transition(width 0.3s ease-out, opacity 0.3s ease-in);

    position: relative;
    z-index: 1;
    padding-left: 125px;
    opacity: 1;

    @include bp(max-width, $bp-small) {
        height: 50%;
        margin: 0 auto;
        width: 100%;
    }

    @include bp(min-width, $bp-small + 1 ) {
        width: 50%;
        height: 100%;
    }

    .outer {
        @include display-flex(flex);
        @include align-items(center);
        @include justify-content(center);
        width: 80%;
        height: 80%;

        &.loading {
            position: relative;

            &:before {
                position: absolute;
                content: "";
                display: block;
                width: 100%;
                top: 0;
                left: 0;
                height: 100%;
                background-size: 30%;
                background: url("/v/s/images/loading.gif") no-repeat scroll center center / 30% auto rgba(255,255,255,0.75);
                z-index: 999;

            }
        }

        .inner {
            position: relative;
            width: 100%;
            height: 100%;

            div {
                position: relative;

                &:not(.cable) {
                    position: absolute;
                }
            }
        }
    }

    .cable {
        width: 100%;
        height: 100%;
        margin: 0 auto;
        position: relative;

        > img {
            height: 100%;
            width: 100%;
            margin: 0 auto;
            position: relative;
            z-index: 5;
        }
    }
    .inputPlug, .outputPlug {
        position: relative;
        z-index: 10;

        .plug {
            height: 300px;
            position: relative;
            z-index: 5;
        }
        .boot {
            position: absolute;
            z-index: 10;
        }
    }

    .inputPlug {
        // Mirror
        @include transform(scaleX(-1));
        .boot {
        }
    }

    .outputPlug {
        .boot {
        }
    }
}

#body {
    &.patch {
        .display {
            // triangles 8-11-sqrt(185) and 9-12-15
            // triangles made from pixel distances from dot to dot in patch image
            // angle of rotation roughly a little more than 36
            .inputPlug img, .outputPlug img {
                @include transform(rotate(-38deg));
            }
        }

        &.reverse_plugs {
            .display {
                .inputPlug img {
                    @include transform(rotate(-38deg) scaleX(-1));
                }
            }

            #inputPlugSelector {
                right: 100%;

                .dot {
                    left: -20px;
                }
            }
        }
    }

    &.delay {
        .inputPlug, .outputPlug {
            img {
                @include transition(all 2s 2s ease);
            }
        }
    }

    &.expanded .display {
        @include transition(width 0.3s ease-out, opacity 0.15s ease-out);
        width: 0%;
        opacity: 0;
    }
}